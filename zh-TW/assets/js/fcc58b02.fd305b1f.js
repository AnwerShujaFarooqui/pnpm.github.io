"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8188],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(9496);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),f=l,g=m["".concat(o,".").concat(f)]||m[f]||d[f]||r;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,i[1]=p;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>p,metadata:()=>s,toc:()=>d});var a=n(2081),l=n(4604),r=(n(9496),n(9613)),i=["components"],p={id:"filtering",title:"\u7be9\u9078"},o=void 0,s={unversionedId:"filtering",id:"version-7.x/filtering",title:"\u7be9\u9078",description:"\u7be9\u9078\u529f\u80fd\u5141\u8a31\u60a8\u5c07\u547d\u4ee4\u9650\u5236\u70ba\u5c01\u88dd\u7684\u7279\u5b9a\u5b50\u96c6\u3002",source:"@site/i18n/zh-TW/docusaurus-plugin-content-docs/version-7.x/filtering.md",sourceDirName:".",slug:"/filtering",permalink:"/zh-TW/filtering",draft:!1,editUrl:"https://crowdin.com/project/pnpm/zh-TW",tags:[],version:"7.x",frontMatter:{id:"filtering",title:"\u7be9\u9078"},sidebar:"version-7.x/docs",previous:{title:"\u8a2d\u5b9a",permalink:"/zh-TW/configuring"},next:{title:"\u751f\u547d\u9031\u671f\u8173\u672c",permalink:"/zh-TW/scripts"}},c={},d=[{value:"\u6bd4\u5c0d",id:"\u6bd4\u5c0d",level:2},{value:"--\u7be9\u9078 &lt;package_name&gt;",id:"--\u7be9\u9078-package_name",level:3},{value:"--filter &lt;package_name&gt;...",id:"--filter-package_name",level:3},{value:"--filter &lt;\u5c01\u88dd\u540d\u7a31&gt;^...",id:"--filter-\u5c01\u88dd\u540d\u7a31",level:3},{value:"--filter ...&lt;\u5c01\u88dd\u540d\u7a31&gt;",id:"--filter-\u5c01\u88dd\u540d\u7a31-1",level:3},{value:"--filter &quot;...^&lt;\u5c01\u88dd\u540d\u7a31&gt;&quot;",id:"--filter-\u5c01\u88dd\u540d\u7a31-2",level:3},{value:"--filter ./&lt;glob&gt;, --filter {&lt;glob&gt;}",id:"--filter-glob---filter-glob",level:3},{value:"--filter &quot;<since>&quot;",id:"--filter-since",level:3},{value:"\u6392\u9664",id:"\u6392\u9664",level:2},{value:"\u4f7f\u7528\u591a\u500b\u7be9\u9078\u5668",id:"\u4f7f\u7528\u591a\u500b\u7be9\u9078\u5668",level:2},{value:"--filter-prod &lt;filtering_pattern&gt;",id:"--filter-prod-filtering_pattern",level:2},{value:"--test-pattern &lt;glob&gt;",id:"--test-pattern-glob",level:2},{value:"--changed-files-ignore-pattern &lt;glob&gt;",id:"--changed-files-ignore-pattern-glob",level:2}],m={toc:d};function f(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u7be9\u9078\u529f\u80fd\u5141\u8a31\u60a8\u5c07\u547d\u4ee4\u9650\u5236\u70ba\u5c01\u88dd\u7684\u7279\u5b9a\u5b50\u96c6\u3002"),(0,r.kt)("p",null,"pnpm \u652f\u63f4\u591a\u7a2e\u9078\u53d6\u5668\uff0c\u7528\u65bc\u4f9d\u540d\u7a31\u6216\u95dc\u4fc2\u9078\u53d6\u5c01\u88dd\u3002"),(0,r.kt)("p",null,"\u53ef\u4ee5\u900f\u904e ",(0,r.kt)("inlineCode",{parentName:"p"},"--filter")," (\u6216 ",(0,r.kt)("inlineCode",{parentName:"p"},"-F"),") \u65d7\u6a19\u6307\u5b9a\u9078\u64c7\u5668\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --\u7be9\u9078 <package_selector> <command>\n")),(0,r.kt)("h2",{id:"\u6bd4\u5c0d"},"\u6bd4\u5c0d"),(0,r.kt)("h3",{id:"--\u7be9\u9078-package_name"},"--\u7be9\u9078 ","<","package_name>"),(0,r.kt)("p",null,"\u8981\u9078\u53d6\u4e00\u500b\u5b8c\u5168\u7b26\u5408\u7684\u5c01\u88dd\uff0c\u53ea\u9700\u6307\u5b9a\u5b83\u7684\u540d\u7a31 (",(0,r.kt)("inlineCode",{parentName:"p"},"@scope/pkg"),") \u6216\u4f7f\u7528 \u4e00\u500b\u6a21\u5f0f\u4f86\u9078\u53d6\u4e00\u7d44\u5c01\u88dd (",(0,r.kt)("inlineCode",{parentName:"p"},"@scope/*"),")\u3002"),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --\u7be9\u9078 "@babel/core" \u6e2c\u8a66\npnpm --\u7be9\u9078 "@babel/*" \u6e2c\u8a66\npnpm --\u7be9\u9078 "*core" \u6e2c\u8a66\n')),(0,r.kt)("p",null,"\u6307\u5b9a\u5c01\u88dd\u7684\u7bc4\u570d\u662f\u9078\u7528\u7684\uff0c\u56e0\u6b64\u5982\u679c\u627e\u4e0d\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"core"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"--filter=core")," \u5c07\u9078\u53d6 ",(0,r.kt)("inlineCode",{parentName:"p"},"@babel/core"),"\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5de5\u4f5c\u5340\u5177\u6709\u591a\u500b\u540c\u540d\u7684\u5c01\u88dd (\u4f8b\u5982\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"@babel/core")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"@types/core"),")\uff0c \u5247\u6c92\u6709\u7bc4\u570d\u7684\u7be9\u9078\u5c07\u4e0d\u9078\u64c7\u4efb\u4f55\u5167\u5bb9\u3002"),(0,r.kt)("h3",{id:"--filter-package_name"},"--filter ","<","package_name>..."),(0,r.kt)("p",null,"To select a package and its dependencies (direct and non-direct), suffix the package name with an ellipsis: ",(0,r.kt)("inlineCode",{parentName:"p"},"<package_name>..."),". For instance, the next command will run tests of ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," and all of its dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter foo... test\n")),(0,r.kt)("p",null,"You may use a pattern to select a set of root packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "@babel/preset-*..." test\n')),(0,r.kt)("h3",{id:"--filter-\u5c01\u88dd\u540d\u7a31"},"--filter ","<","\u5c01\u88dd\u540d\u7a31>^..."),(0,r.kt)("p",null,"To ONLY select the dependencies of a package (both direct and non-direct), suffix the name with the aforementioned ellipsis preceded by a chevron. For instance, the next command will run tests for all of ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),"'s dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "foo^..." test\n')),(0,r.kt)("h3",{id:"--filter-\u5c01\u88dd\u540d\u7a31-1"},"--filter ...","<","\u5c01\u88dd\u540d\u7a31>"),(0,r.kt)("p",null,"To select a package and its dependent packages (direct and non-direct), prefix the package name with an ellipsis: ",(0,r.kt)("inlineCode",{parentName:"p"},"...<package_name>"),". For instance, this will run the tests of ",(0,r.kt)("inlineCode",{parentName:"p"},"foo")," and all packages dependent on it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter ...foo test\n")),(0,r.kt)("h3",{id:"--filter-\u5c01\u88dd\u540d\u7a31-2"},'--filter "...^',"<",'\u5c01\u88dd\u540d\u7a31>"'),(0,r.kt)("p",null,"To ONLY select a package's dependents (both direct and non-direct), prefix the package name with an ellipsis followed by a chevron. For instance, this will run tests for all packages dependent on ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'pnpm --filter "...^foo" test\n')),(0,r.kt)("h3",{id:"--filter-glob---filter-glob"},"--filter ./","<","glob>, --filter {","<","glob>}"),(0,r.kt)("p",null,"\u76f8\u5c0d\u65bc\u7576\u524d\u5de5\u4f5c\u76ee\u9304\u76f8\u7b26\u5c08\u6848\u7684 Glob \u6a21\u5f0f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "./packages/**" <cmd>\n')),(0,r.kt)("p",null,"Includes all projects that are under the specified directory."),(0,r.kt)("p",null,"It may be used with the ellipsis and chevron operators to select dependents/dependencies as well:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter ...{<\u76ee\u9304>} <cmd>\npnpm --filter {<\u76ee\u9304>}... <cmd>\npnpm --filter ...{<\u76ee\u9304>}... <cmd>\n")),(0,r.kt)("p",null,"It may also be combined with ",(0,r.kt)("inlineCode",{parentName:"p"},"[<since>]"),". For instance, to select all changed projects inside a directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "{packages/**}[origin/master]" <cmd>\npnpm --filter "...{packages/**}[origin/master]" <cmd>\npnpm --filter "{packages/**}[origin/master]..." <cmd>\npnpm --filter "...{packages/**}[origin/master]..." <cmd>\n')),(0,r.kt)("p",null,"Or you may select all packages from a directory with names matching the given pattern:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'pnpm --filter "@babel/*{components/**}" <cmd>\npnpm --filter "@babel/*{components/**}[origin/master]" <cmd>\npnpm --filter "...@babel/*{components/**}[origin/master]" <cmd>\n')),(0,r.kt)("h3",{id:"--filter-since"},'--filter "',"[<","since>]",'"'),(0,r.kt)("p",null,"Selects all the packages changed since the specified commit/branch. May be suffixed or prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"...")," to include dependencies/dependents."),(0,r.kt)("p",null,"For example, the next command will run tests in all changed packages since ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," and on any dependent packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter "...[origin/master]" test\n')),(0,r.kt)("h2",{id:"\u6392\u9664"},"\u6392\u9664"),(0,r.kt)("p",null,'Any of the filter selectors may work as exclusion operators when they have a leading "!". In zsh (and possibly other shells), "!" should be escaped: ',(0,r.kt)("inlineCode",{parentName:"p"},"\\!"),"."),(0,r.kt)("p",null,"For instance, this will run a command in all projects except for ",(0,r.kt)("inlineCode",{parentName:"p"},"foo"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter=!foo <cmd>\n")),(0,r.kt)("p",null,"And this will run a command in all projects that are not under the ",(0,r.kt)("inlineCode",{parentName:"p"},"lib")," directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter=!./lib <cmd>\n")),(0,r.kt)("h2",{id:"\u4f7f\u7528\u591a\u500b\u7be9\u9078\u5668"},"\u4f7f\u7528\u591a\u500b\u7be9\u9078\u5668"),(0,r.kt)("p",null,"When packages are filtered, every package is taken that matches at least one of the selectors. You can use as many filters as you want:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"pnpm --filter ...foo --filter bar --filter baz... test\n")),(0,r.kt)("h2",{id:"--filter-prod-filtering_pattern"},"--filter-prod ","<","filtering_pattern>"),(0,r.kt)("p",null,"Acts the same a ",(0,r.kt)("inlineCode",{parentName:"p"},"--filter")," but omits ",(0,r.kt)("inlineCode",{parentName:"p"},"devDependencies")," when selecting dependency projects from the workspace."),(0,r.kt)("h2",{id:"--test-pattern-glob"},"--test-pattern ","<","glob>"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test-pattern")," allows detecting whether the modified files are related to tests. If they are, the dependent packages of such modified packages are not included."),(0,r.kt)("p",null,'This option is useful with the "changed since" filter. For instance, the next command will run tests in all changed packages, and if the changes are in the source code of the package, tests will run in the dependent packages as well:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter="...[origin/master]" --test-pattern="test/*" test\n')),(0,r.kt)("h2",{id:"--changed-files-ignore-pattern-glob"},"--changed-files-ignore-pattern ","<","glob>"),(0,r.kt)("p",null,"Allows to ignore changed files by glob patterns when filtering for changed projects since the specified commit/branch."),(0,r.kt)("p",null,"Usage example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pnpm --filter="...[origin/master]" --changed-files-ignore-pattern="**/README.md" run build\n')))}f.isMDXComponent=!0}}]);