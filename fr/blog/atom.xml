<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pnpm.io/fr/blog</id>
    <title>pnpm Blog</title>
    <updated>2021-12-29T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://pnpm.io/fr/blog"/>
    <subtitle>pnpm Blog</subtitle>
    <icon>https://pnpm.io/fr/img/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[L'année 2021 pour pnpm]]></title>
        <id>/2021/12/29/yearly-update</id>
        <link href="https://pnpm.io/fr/blog/2021/12/29/yearly-update"/>
        <updated>2021-12-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[C'est la fin de l'année et ce fut une bonne année pour pnpm, alors voyons comment elle s'est déroulée.]]></summary>
        <content type="html"><![CDATA[<p>C'est la fin de l'année et ce fut une bonne année pour pnpm, alors voyons comment elle s'est déroulée.</p><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="utilisation">Utilisation<a class="hash-link" href="#utilisation" title="Lien direct vers le titre">​</a></h2><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="statistiques-de-téléchargement">Statistiques de téléchargement<a class="hash-link" href="#statistiques-de-téléchargement" title="Lien direct vers le titre">​</a></h3><p>Mon objectif cette année était de battre Bower en nombre de téléchargements. Nous avons pu atteindre cet objectif <a href="https://npm-stat.com/charts.html?package=pnpm&amp;package=bower&amp;from=2021-01-01&amp;to=2021-12-29" target="_blank" rel="noopener noreferrer">en novembre</a>&nbsp;:</p><p><img loading="lazy" src="/fr/assets/images/pnpm-vs-bower-stats-6ec69a7308f5fbc1433420b1b2f7457f.png" width="976" height="389" class="img_ZoCD"></p><p>pnpm a été téléchargé environ <a href="https://npm-stat.com/charts.html?package=pnpm&amp;from=2016-12-01&amp;to=2021-12-29" target="_blank" rel="noopener noreferrer">3 fois plus</a> en 2021 qu'en 2020&nbsp;:</p><p><img loading="lazy" src="/fr/assets/images/download-stats-2021-1418562cb03abd558c4a6b4b17155227.png" width="983" height="394" class="img_ZoCD"></p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_uPsx"><div class="admonitionHeading_iLYZ"><span class="admonitionIcon_Ci8g"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_zKpZ"><p>Ces statistiques ne mesurent même pas toutes les différentes façons dont pnpm peut être installé&nbsp;! Celles-ci ne mesurent que les téléchargements du <a href="https://www.npmjs.com/package/pnpm" target="_blank" rel="noopener noreferrer">package pnpm depuis npm</a>. Cette année, nous avons également ajouté les versions binaires compilées de pnpm, qui sont livrées différemment.</p></div></div><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="visites-des-documents">Visites des documents<a class="hash-link" href="#visites-des-documents" title="Lien direct vers le titre">​</a></h3><p>Nous recueillons des statistiques non personnalisées sur nos documents à l'aide de Google Analytics. En 2021, nous avions parfois plus de 2 000 visiteurs uniques par semaine.</p><p><img loading="lazy" src="/fr/assets/images/ga-unique-visits-2021-b8bc3649f680565127696c85bdd4b701.png" width="665" height="509" class="img_ZoCD"></p><p>La plupart de nos utilisateurs sont originaires des États-Unis et de la Chine.</p><p><img loading="lazy" src="/fr/assets/images/countries-2021-8eb9625e1798649ee04451dfb10ac851.png" width="585" height="498" class="img_ZoCD"></p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="étoiles-github">Étoiles GitHub<a class="hash-link" href="#étoiles-github" title="Lien direct vers le titre">​</a></h3><p>Notre <a href="https://github.com/pnpm/pnpm" target="_blank" rel="noopener noreferrer">dépôt principal sur GitHub</a> a reçu plus de 5 000 étoiles cette année.</p><p><img loading="lazy" src="/fr/assets/images/stars-2021-0061c16f424e33ba0db224d82bcb53f3.png" width="913" height="800" class="img_ZoCD"></p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="nouveaux-utilisateurs">Nouveaux utilisateurs<a class="hash-link" href="#nouveaux-utilisateurs" title="Lien direct vers le titre">​</a></h3><p>Notre nouvel utilisateur le plus important cette année est <a href="https://github.com/pnpm/pnpm.github.io/pull/89" target="_blank" rel="noopener noreferrer">Bytedance</a> (la société derrière TikTok).</p><p>De plus, de nombreux projets importants open-source ont commencé à utiliser pnpm. Certains sont passés à pnpm en raison de son excellent support des monorepos&nbsp;:</p><ul><li><a href="https://github.com/vuejs/vue-next" target="_blank" rel="noopener noreferrer">Vue</a></li><li><a href="https://github.com/vitejs/vite" target="_blank" rel="noopener noreferrer">Vite</a></li><li>et d'<a href="https://pnpm.io/workspaces#usage-examples" target="_blank" rel="noopener noreferrer">autres</a> encore</li></ul><p>Certains ont changé parce qu'ils apprécient l'efficacité, la rapidité et la beauté de pnpm&nbsp;:</p><ul><li><a href="https://twitter.com/Autoprefixer/status/1476226146488692736" target="_blank" rel="noopener noreferrer">Autoprefixer</a></li><li><a href="https://twitter.com/PostCSS/status/1470438664006258701" target="_blank" rel="noopener noreferrer">PostCSS</a></li><li><a href="https://twitter.com/Browserslist/status/1468264308308156419" target="_blank" rel="noopener noreferrer">Browserslist</a></li></ul><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="fonctionnalités-marquantes">Fonctionnalités marquantes<a class="hash-link" href="#fonctionnalités-marquantes" title="Lien direct vers le titre">​</a></h2><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="nouveau-format-du-fichier-lockfile-depuis-v600">Nouveau format du fichier lockfile (depuis <a href="https://github.com/pnpm/pnpm/releases/tag/v6.0.0" target="_blank" rel="noopener noreferrer">v6.0.0</a>)<a class="hash-link" href="#nouveau-format-du-fichier-lockfile-depuis-v600" title="Lien direct vers le titre">​</a></h3><p>L'un des premiers et des plus importants changements de cette année a été le nouveau format de <code>pnpm-lock.yaml</code>. Il s'agissait d'un changement de rupture, nous avons donc dû publier la v6. Mais ce fut un succès. L'ancien fichier lockfile provoquait fréquemment des conflits avec Git. Depuis l'introduction du nouveau format, nous n'avons reçu aucune plainte concernant des conflits Git.</p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="gestion-des-versions-de-nodejs-depuis-v6120">Gestion des versions de Node.js (depuis <a href="https://github.com/pnpm/pnpm/releases/tag/v6.12.0" target="_blank" rel="noopener noreferrer">v6.12.0</a>)<a class="hash-link" href="#gestion-des-versions-de-nodejs-depuis-v6120" title="Lien direct vers le titre">​</a></h3><p>Nous avons livré une nouvelle commande (<code>pnpm env</code>) qui permet de gérer les versions de Node.js. Vous pouvez donc utiliser pnpm à la place des gestionnaires de version de Node.js comme nvm ou Volta.</p><p>De plus, pnpm est livré sous la forme d'un exécutable autonome, de sorte que vous puissiez l'exécuter même sans que Node.js soit préinstallé sur le système.</p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="injection-de-dépendances-locales-depuis-v6200">Injection de dépendances locales (depuis <a href="https://github.com/pnpm/pnpm/releases/tag/v6.20.0" target="_blank" rel="noopener noreferrer">v6.20.0</a>)<a class="hash-link" href="#injection-de-dépendances-locales-depuis-v6200" title="Lien direct vers le titre">​</a></h3><p>Vous pouvez «&nbsp;injecter&nbsp;» une dépendance locale. Par défaut, les dépendances locales sont liées symboliquement à <code>node_modules</code> mais avec cette nouvelle fonctionnalité, vous pouvez demander à pnpm de lier à la place en dur les fichiers du package.</p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="amélioration-du-signalement-des-problèmes-de-dépendance-entre-pairs-depuis-v6240">Amélioration du signalement des problèmes de dépendance entre pairs (depuis <a href="https://github.com/pnpm/pnpm/releases/tag/v6.24.0" target="_blank" rel="noopener noreferrer">v6.24.0</a>)<a class="hash-link" href="#amélioration-du-signalement-des-problèmes-de-dépendance-entre-pairs-depuis-v6240" title="Lien direct vers le titre">​</a></h3><p>Les problèmes de dépendance des pairs (« peer dependency&nbsp;») étaient auparavant imprimés en texte simple et il était difficile de les comprendre. Elles sont maintenant toutes regroupées et affichées dans une belle structure hiérarchique.</p><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="la-compétition">La compétition<a class="hash-link" href="#la-compétition" title="Lien direct vers le titre">​</a></h2><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="yarn">Yarn<a class="hash-link" href="#yarn" title="Lien direct vers le titre">​</a></h3><p>Yarn a ajouté un gestionnaire de liens pnpm dans la <a href="https://dev.to/arcanis/yarn-31-corepack-esm-pnpm-optional-packages--3hak#new-install-mode-raw-pnpm-endraw-" target="_blank" rel="noopener noreferrer">v3.1</a>. Ainsi, Yarn peut créer une structure de répertoire node-modules similaire à celle créée par pnpm.</p><p>De plus, l'équipe de Yarn prévoit d'implémenter un stockage adressable par le contenu pour être plus efficace en termes d'espace disque.</p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="npm">npm<a class="hash-link" href="#npm" title="Lien direct vers le titre">​</a></h3><p>L'équipe npm a décidé d'adopter également la structure de répertoire node-modules avec liens symboliques utilisée par pnpm (<a href="https://github.com/npm/rfcs/blob/main/accepted/0042-isolated-mode.md" target="_blank" rel="noopener noreferrer">RFC</a> associée).</p><h3 class="anchor anchorWithStickyNavbar_lLJQ" id="autres">Autres<a class="hash-link" href="#autres" title="Lien direct vers le titre">​</a></h3><p><a href="https://twitter.com/jarredsumner/status/1473416431291174912/photo/1" target="_blank" rel="noopener noreferrer">Bun</a> écrit en Zig et <a href="https://github.com/voltpkg/volt" target="_blank" rel="noopener noreferrer">Volt</a> écrit en Rust prétendent tous deux être plus rapides que npm/Yarn/pnpm. Je n'ai pas encore évalué ces nouveaux gestionnaires de packages.</p><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="plans-futurs">Plans futurs<a class="hash-link" href="#plans-futurs" title="Lien direct vers le titre">​</a></h2><p>Plus vite, mieux, le meilleur.</p>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Options de configuration des node_modules avec pnpm]]></title>
        <id>/2020/10/17/node-modules-configuration-options-with-pnpm</id>
        <link href="https://pnpm.io/fr/blog/2020/10/17/node-modules-configuration-options-with-pnpm"/>
        <updated>2020-10-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Il existe de nombreuses façons de créer un dossier nodemodules. Votre objectif doit être de créer le plus strict, mais si ce n'est pas possible, il y a aussi des options pour faire un nodemodules en vrac.]]></summary>
        <content type="html"><![CDATA[<p>Il existe de nombreuses façons de créer un dossier node_modules. Votre objectif doit être de créer le plus strict, mais si ce n'est pas possible, il y a aussi des options pour faire un node_modules en vrac.</p><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="configuration-par-défaut">Configuration par défaut<a class="hash-link" href="#configuration-par-défaut" title="Lien direct vers le titre">​</a></h2><p>Par défaut, pnpm v5 créera un node_modules semi-strict. Semi-strict signifie que votre application ne pourra require que des packages ajoutés en tant que dépendances au <code>package.json</code> (à quelques exceptions près). Cependant, vos dépendances pourront accéder à tous les packages.</p><p>La configuration par défaut ressemble à ceci:</p><div class="language-ini codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-ini codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">; Tous les packages sont hissés vers node_modules/.pnpm/node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hoist-pattern[]=*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">; Tous les types sont hissés à la racine afin de rendre TypeScript heureux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public-hoist-pattern[]=*types*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">; Tous les packages liés à ESLint sont également hissés à la racine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">public-hoist-pattern[]=*eslint*</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="plugnplay-la-configuration-la-plus-stricte">Plug'n'Play. La configuration la plus stricte<a class="hash-link" href="#plugnplay-la-configuration-la-plus-stricte" title="Lien direct vers le titre">​</a></h2><p>pnpm prend en charge <a href="https://yarnpkg.com/features/pnp" target="_blank" rel="noopener noreferrer">Yarn's Plug'n'Play</a> depuis la version 5.9. Avec PnP, votre application et les dépendances de votre application n'auront accès qu'à leurs dépendances déclarées. C'est encore plus strict que de définir <code>hoist=false</code> car à l'intérieur d'un monorepo, votre application ne pourra même pas accéder aux dépendances du projet racine.</p><p>Pour utiliser Plug'n'Play, définissez ces paramètres:</p><div class="language-ini codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-ini codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">node-linker=pnp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">symlink=false</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="un-répertoire-de-node_modules-strict-et-traditionnel">Un répertoire de node_modules strict et traditionnel<a class="hash-link" href="#un-répertoire-de-node_modules-strict-et-traditionnel" title="Lien direct vers le titre">​</a></h2><p>Si vous n'êtes pas encore prêt à utiliser PnP, vous pouvez toujours être strict et autoriser uniquement les packages à accéder à leurs propres dépendances en définissant la configuration de hoist sur false:</p><div class="language-ini codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-ini codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">hoist=false</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Cependant, si certaines de vos dépendances tentent d'accéder à des packages qui ne figurent pas dans leurs dépendances, vous avez deux options:</p><ol><li><p>Créez un <code>pnpmfile.js</code> et utilisez un <a href="/fr/pnpmfile">crochet</a> pour ajouter la dépendance manquante au manifeste du package.</p></li><li><p>Ajoutez un pattern au paramètre <code>hoist-pattern</code>. Par exemple, si le module non trouvé est <code>babel-core</code>, ajoutez le paramètre suivant à <code>.npmrc</code>:</p><div class="language-ini codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-ini codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">hoist-pattern[]=babel-core</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><h2 class="anchor anchorWithStickyNavbar_lLJQ" id="le-pire-des-cas---hisser-à-la-racine">Le pire des cas - hisser à la racine<a class="hash-link" href="#le-pire-des-cas---hisser-à-la-racine" title="Lien direct vers le titre">​</a></h2><p>Certains outils peuvent ne pas fonctionner même avec la configuration par défaut de pnpm, qui héberge tout à la racine du magasin virtuel et quelques packages à la racine. Dans ce cas, vous pouvez hisser tout ou un sous-ensemble de dépendances à la racine du répertoire des modules.</p><p>Tout hisser à la racine de node_modules&nbsp;:</p><div class="language-ini codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-ini codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">shamefully-hoist=true</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ne hisser que les packages qui correspondent à un modèle:</p><div class="language-ini codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-ini codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">public-hoist-pattern[]=babel-*</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Flat node_modules n'est pas le seul moyen]]></title>
        <id>/2020/05/27/flat-node-modules-is-not-the-only-way</id>
        <link href="https://pnpm.io/fr/blog/2020/05/27/flat-node-modules-is-not-the-only-way"/>
        <updated>2020-05-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Les nouveaux utilisateurs de pnpm me posent souvent des questions sur la structure bizarre du dossier node_modules que pnpm créé. Pourquoi n'est-il pas plat ? Où sont toutes les sous-dépendances ?]]></summary>
        <content type="html"><![CDATA[<p>Les nouveaux utilisateurs de pnpm me posent souvent des questions sur la structure bizarre du dossier <code>node_modules</code> que pnpm créé. Pourquoi n'est-il pas plat ? Où sont toutes les sous-dépendances ?</p><blockquote><p>Je vais supposer que les lecteurs de cet article sont déjà familiers avec les <code>node_modules</code> plats créés par npm et Yarn. Si vous ne comprenez pas pourquoi npm 3 a dû commencer à utiliser <code>node_modules</code> en v3, vous pouvez trouver un peu de préhistoire dans <a href="https://www.kochan.io/nodejs/why-should-we-use-pnpm.html" target="_blank" rel="noopener noreferrer">Pourquoi devrait-on utiliser pnpm ?</a>.</p></blockquote><p>Alors pourquoi les <code>node_modules</code> de pnpm sont inhabituels ? Créons deux répertoires et éxecutons <code>npm add express</code> dans l'un d'eux et <code>pnpm add express</code> dans l'autre. Voilà ce que vous obtenez dans le <code>node_modules</code> du premier répertoire:</p><div class="language-text codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-text codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">.bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">accepts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">array-flatten</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">body-parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bytes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">content-disposition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cookie-signature</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cookie</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">debug</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">depd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">destroy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ee-first</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">encodeurl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">escape-html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">etag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">express</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Vous pouvez voir tout le répertoire <a href="https://github.com/zkochan/comparing-node-modules/tree/master/npm-example/node_modules" target="_blank" rel="noopener noreferrer">ici</a>.</p><p>Et voici ce que vous obtenez dans les <code>node_modules</code> créés par pnpm:</p><div class="language-text codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-text codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">.pnpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.modules.yaml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">express</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Vous pouvez vérifier <a href="https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules" target="_blank" rel="noopener noreferrer">ici</a>.</p><p>Alors, où sont toues les dépendances ? Il y a qu'un seul dossier dans les <code>node_modules</code> appelé <code>.pnpm</code> et il y a un lien symbolique appelé <code>express</code>. Et bien, nous n'avons installé que <code>express</code>, c'est donc le seul package auquel votre application doit avoir accès</p><blockquote><p>En savoir plus sur pourquoi la rigueur de pnpm est une bonne chose <a href="https://medium.com/pnpm/pnpms-strictness-helps-to-avoid-silly-bugs-9a15fb306308" target="_blank" rel="noopener noreferrer">ici</a></p></blockquote><p>Voyons ce qu'il y a à l'intérieur d'<code>express</code>:</p><div class="language-text codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-text codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">▾ node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ▸ .pnpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ▾ express</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      History.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      LICENSE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Readme.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  .modules.yaml</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>express</code> n'a pas de <code>node_modules</code> ? Où sont toutes les dépendances d'<code>express</code> ?</p><p>L'astuce est qu'<code>express</code> n'est qu'un lien symbolique. Lorsque Node.js résout les dépendances, il utilise leurs emplacements réels, il ne conserve donc pas les liens symboliques. Mais où est l'emplacement réel d'<code>express</code>, vous vous demandez ?</p><p>Ici: <a href="https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules/.pnpm/express@4.17.1/node_modules/express" target="_blank" rel="noopener noreferrer">node_modules/.pnpm/express@4.17.1/node_modules/express</a>.</p><p>OK, alors maintenant nous connaissons l'utilité du dossier <code>.pnpm/</code>. <code>.pnpm/</code> stocke tous les packages dans une structure de dossiers plats, de sorte que chaque package peut être trouvé dans un dossier nommé par ce modèle:</p><div class="language-text codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-text codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">.pnpm/&lt;name&gt;@&lt;version&gt;/node_modules/&lt;name&gt;</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>On appelle ça le dossier du stockage virtuel.</p><p>Cette structure plate évite les problèmes de long chemin causés par les <code>node_modules</code> créés par npm v2 mais maintient les packages isolés, contrairement aux <code>node_modules</code> plats créés par npm v 3, 4, 5, 6 ou bien Yarn v1.</p><p>Regardons maintenant le réel emplacement d'<code>express</code>:</p><div class="language-text codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-text codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">  ▾ express</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      History.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      LICENSE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Readme.md</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Est-ce une arnaque ? Il manque encore <code>node_modules</code> ! La deuxième astuce de la structure des <code>node_modules</code> de pnpm est que les dépendances des packages se trouvent au même niveau de répertoire que l'emplacement réel du package dépendant. Donc les dépendances d'<code>express</code> ne sont pas dans <code>.pnpm/express@4.17.1/node_modules/express/node_modules/</code> mais dans <a href="https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules/.pnpm/express@4.17.1/node_modules" target="_blank" rel="noopener noreferrer">.pnpm/express@4.17.1/node_modules/</a>:</p><div class="language-text codeBlockContainer_w3Dn theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_SKsd"><pre tabindex="0" class="prism-code language-text codeBlock_I6CT thin-scrollbar"><code class="codeBlockLines_xjdV"><span class="token-line" style="color:#393A34"><span class="token plain">▾ node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ▾ .pnpm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ accepts@1.3.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▸ array-flatten@1.1.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ▾ express@4.16.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ▾ node_modules</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ accepts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ array-flatten</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ body-parser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ content-disposition</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▸ etag</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ▾ express</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          ▸ lib</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            History.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            LICENSE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Readme.md</span><br></span></code></pre><div class="buttonGroup_jTmX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_ZTkQ" aria-hidden="true"><svg class="copyButtonIcon_ymjV" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_ZUBu" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Toutes les dépendances d'<code>express</code> sont des liens symboliques vers des dossiers appropriés dans <code>node_modules/.pnpm/</code>. Placer les dépendances d'<code>express</code> un niveau supérieur permet d'éviter les liens symboliques circulaires.</p><p>Donc, comme vous pouvez le voir, même si la structure <code>node_modules</code> pnpm semble inhabituelle au premier abord:</p><ol><li>il est complètement compatible avec Node.js</li><li>les packages sont bien regroupés avec leurs dépendances</li></ol><p>La structure est un peu <a href="/fr/how-peers-are-resolved">plus complexe</a> pour les packages avec des dépendances paires mais l'idée est la même: utiliser des liens symboliques pour créer une imbrication avec une structure de dossier plate.</p>]]></content>
        <author>
            <name>Zoltan Kochan</name>
            <uri>http://twitter.com/zoltankochan</uri>
        </author>
    </entry>
</feed>