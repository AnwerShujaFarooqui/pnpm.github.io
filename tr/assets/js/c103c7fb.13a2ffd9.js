"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4918],{210:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2022/12/30/yearly-update","metadata":{"permalink":"/tr/blog/2022/12/30/yearly-update","editUrl":"https://crowdin.com/project/pnpm/tr","source":"@site/i18n/tr/docusaurus-plugin-content-blog/2022-12-30-yearly-update.md","title":"The year 2022 for pnpm","description":"It is the end of the year. A really hard year. As you may know, I live in Ukraine, so due to Russia\'s war against us, it was harder to lead this project than in previous years. Nevertheless, it was a good year for pnpm. We\'ve got a lot of new users, contributors, and we have implemented many great features.","date":"2022-12-30T00:00:00.000Z","formattedDate":"30 Aral\u0131k 2022","tags":[],"readingTime":2.375,"hasTruncateMarker":true,"authors":[{"name":"Zoltan Kochan","url":"http://twitter.com/zoltankochan","imageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"}],"frontMatter":{"title":"The year 2022 for pnpm","author":"Zoltan Kochan","authorURL":"http://twitter.com/zoltankochan","authorImageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"},"nextItem":{"title":"pnpm g\xf6z\xfcnden 2021 y\u0131l\u0131","permalink":"/tr/blog/2021/12/29/yearly-update"}},"content":"It is the end of the year. A really hard year. As you may know, I live in Ukraine, so due to Russia\'s war against us, it was harder to lead this project than in previous years. Nevertheless, it was a good year for pnpm. We\'ve got a lot of new users, contributors, and we have implemented many great features.\\n\\n![](/img/blog/2022-review.png)\\n\\n(the above illustration was generated by Midjourney. The tiger symolizes the year of the tiger)\\n\\n\x3c!--truncate--\x3e\\n\\n## Usage\\n\\n### \u0130ndirme \u0130statistikleri\\n\\nMy goal this year was to beat Lerna by the number of downloads. We were able to achieve this goal [in August](https://npm-stat.com/charts.html?package=pnpm&package=lerna&from=2022-01-01&to=2022-12-30):\\n\\n![](/img/blog/pnpm-vs-lerna-stats.png)\\n\\npnpm was downloaded more than [5 times more](https://npm-stat.com/charts.html?package=pnpm&from=2016-12-01&to=2022-12-30) in 2022 than in 2021:\\n\\n![](/img/blog/download-stats-2022.png)\\n\\n### Dok\xfcman ziyaretleri\\n\\nGoogle Analytics\'i kullanarak belgelerimizden baz\u0131 ki\u015fiselle\u015ftirilmemi\u015f istatistikler topluyoruz. In 2022, sometimes we had more than 20,000 unique visitors a week. This is 10 times more than in 2021!\\n\\n![](/img/blog/ga-unique-visits-2022.png)\\n\\n### GitHub y\u0131ld\u0131zlar\u0131\\n\\nOur [main GitHub repository](https://github.com/pnpm/pnpm) received almost +7,000 stars this year.\\n\\n![](/img/blog/stars-2022.png)\\n\\n### Our contributors\\n\\nWe had a lot of new and active contributors this year. These are the people the merge at least one PR in 2022:\\n\\n* [Zoltan Kochan](https://github.com/zkochan)\\n* [chlorine](https://github.com/lvqq)\\n* [await-ovo](https://github.com/await-ovo)\\n* [Brandon Cheng](https://github.com/gluxon)\\n* [Dominic Elm](https://github.com/d3lm)\\n* [MCMXC](https://github.com/mcmxcdev)\\n* [\u90a3\u91cc\u597d\u810f\u4e0d\u53ef\u4ee5](https://github.com/dev-itsheng)\\n* [Homyee King](https://github.com/HomyeeKing)\\n* [Shinobu Hayashi](https://github.com/Shinyaigeek)\\n* [Black-Hole](https://github.com/BlackHole1)\\n* [Kenrick](https://github.com/kenrick95)\\n* [Weyert de Boer](https://github.com/weyert)\\n* [Glen Whitney](https://github.com/gwhitney)\\n* [Cheng](https://github.com/chengcyber)\\n* [zoomdong](https://github.com/fireairforce)\\n* [thinkhalo](https://github.com/ufec)\\n* [\u5b50\u77bb Luci](https://github.com/LuciNyan)\\n* [spencer17x](https://github.com/Spencer17x)\\n* [liuxingbaoyu](https://github.com/liuxingbaoyu)\\n* [\uc7a5\uc9c0\ud6c8](https://github.com/WhiteKiwi)\\n* [Jon de la Motte](https://github.com/jondlm)\\n* [Jack Works](https://github.com/Jack-Works)\\n* [milahu](https://github.com/milahu)\\n* [David Collins](https://github.com/David-Collins)\\n* [nikoladev](https://github.com/nikoladev)\\n* [Igor Bezkrovnyi](https://github.com/ibezkrovnyi)\\n* [Lev Chelyadinov](https://github.com/illright)\\n* [javier-garcia-meteologica](https://github.com/javier-garcia-meteologica)\\n\\n## \xd6ne \xe7\u0131kan \xf6zellikler:\\n\\n### Supporting a symlinkless hoisted `node_modules` (since [v6.25.0](https://github.com/pnpm/pnpm/releases/tag/v6.25.0))\\n\\nRight at the beginning of 2022, we have added support for the \\"traditional\\" hoisted (a.k.a flat `node_modules`). We use Yarn\'s hoisting algorithm to create a proper hoisted `node_modules`. This new setting has basically made pnpm compatible with all Node.js stack that are compatible with npm CLI.\\n\\nTo use the hoisted `node_modules` directory structure, use the `node-linker=hoisted` setting in an `.npmrc` file.\\n\\n### Side effects cache (since [v7.0.0](https://github.com/pnpm/pnpm/releases/tag/v7.0.0))\\n\\nSince v7, [side-effect-cache][] is enabled by default, so dependencies that should be built are only built once on a machine. This improves installation speed by a lot in projects that have dependencies with build scripts.\\n\\n### Dependencies patching (since [v7.4.0](https://github.com/pnpm/pnpm/releases/tag/v7.4.0))\\n\\nThe [`pnpm patch`][] command have been added for patching dependencies in your `node_modules`.\\n\\n### Time-based resolution strategy (since [v7.10.0](https://github.com/pnpm/pnpm/releases/tag/v7.10.0))\\n\\nA new resolution mode was added to pnpm, which should make updating dependencies more secure. You can change the resolution mode with the [resolution-mode][] setting.\\n\\n### Listing licenses of dependencies (since [v7.17.0](https://github.com/pnpm/pnpm/releases/tag/v7.17.0))\\n\\nYou may now you the [`pnpm licenses list`][] command to check the licenses of the installed packages.\\n\\n[side-effect-cache]: /npmrc#side-effects-cache\\n\\n[`pnpm patch`]: /cli/patch\\n\\n[resolution-mode]: https://pnpm.io/npmrc#resolution-mode\\n\\n[`pnpm licenses list`]: /cli/licenses"},{"id":"/2021/12/29/yearly-update","metadata":{"permalink":"/tr/blog/2021/12/29/yearly-update","editUrl":"https://crowdin.com/project/pnpm/tr","source":"@site/i18n/tr/docusaurus-plugin-content-blog/2021-12-29-yearly-update.md","title":"pnpm g\xf6z\xfcnden 2021 y\u0131l\u0131","description":"Y\u0131l\u0131n sonuna geldik.. Ve, pnpm i\xe7in iyi bir y\u0131l oldu. Bakal\u0131m, nas\u0131l ge\xe7ti ?","date":"2021-12-29T00:00:00.000Z","formattedDate":"29 Aral\u0131k 2021","tags":[],"readingTime":2.115,"hasTruncateMarker":true,"authors":[{"name":"Zoltan Kochan","url":"http://twitter.com/zoltankochan","imageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"}],"frontMatter":{"title":"pnpm g\xf6z\xfcnden 2021 y\u0131l\u0131","author":"Zoltan Kochan","authorURL":"http://twitter.com/zoltankochan","authorImageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"},"prevItem":{"title":"The year 2022 for pnpm","permalink":"/tr/blog/2022/12/30/yearly-update"},"nextItem":{"title":"pnpm ile Node Modules yap\u0131land\u0131rma se\xe7enekleri","permalink":"/tr/blog/2020/10/17/node-modules-configuration-options-with-pnpm"}},"content":"Y\u0131l\u0131n sonuna geldik.. Ve, pnpm i\xe7in iyi bir y\u0131l oldu. Bakal\u0131m, nas\u0131l ge\xe7ti ?\\n\\n\x3c!--truncate--\x3e\\n\\n## Kullan\u0131m\\n\\n### \u0130ndirme \u0130statistikleri\\n\\nBu y\u0131lki hedefim Bower\'\u0131 indirme say\u0131s\u0131yla ge\xe7mekti. Bu hedefe, [Kas\u0131m\'da](https://npm-stat.com/charts.html?package=pnpm&package=bower&from=2021-01-01&to=2021-12-29) ula\u015fabildik:\\n\\n![](/img/blog/pnpm-vs-bower-stats.png)\\n\\npnpm, 2021\'de 2020\'ye g\xf6re [3 kat daha fazla](https://npm-stat.com/charts.html?package=pnpm&from=2016-12-01&to=2021-12-29)  indirildi:\\n\\n![](/img/blog/download-stats-2021.png)\\n\\n:::note\\n\\nBu istatistikler, pnpm\'nin kurulabilece\u011fi t\xfcm farkl\u0131 yollar\u0131 i\xe7ermiyor bile! Yaln\u0131zca [pnpm npm paketinin](https://www.npmjs.com/package/pnpm) indirmelerini \xf6l\xe7\xfcyor. Bu y\u0131l, farkl\u0131 \u015fekilde g\xf6nderilen pnpm\'in derlenmi\u015f binary s\xfcr\xfcmlerini de ekledik.\\n\\n:::\\n\\n### Dok\xfcman ziyaretleri\\n\\nGoogle Analytics\'i kullanarak belgelerimizden baz\u0131 ki\u015fiselle\u015ftirilmemi\u015f istatistikler topluyoruz. 2021\'de bazen haftada 2.000\'den fazla tekil ziyaret\xe7imiz oldu.\\n\\n![](/img/blog/ga-unique-visits-2021.png)\\n\\nKullan\u0131c\u0131lar\u0131m\u0131z\u0131n \xe7o\u011fu Amerika Birle\u015fik Devletleri ve \xc7in\'den.\\n\\n![](/img/blog/countries-2021.png)\\n\\n### GitHub y\u0131ld\u0131zlar\u0131\\n\\nAna [GitHub repomuz](https://github.com/pnpm/pnpm) bu y\u0131l 5.000\'in \xfczerinde y\u0131ld\u0131z ald\u0131.\\n\\n![](/img/blog/stars-2021.png)\\n\\n### Yeni kullan\u0131c\u0131lar\\n\\nBu y\u0131lki en b\xfcy\xfck yeni kullan\u0131c\u0131m\u0131z [Bytedance](https://github.com/pnpm/pnpm.github.io/pull/89) (TikTok\'un arkas\u0131ndaki \u015firket).\\n\\nAyr\u0131ca, bir\xe7ok harika a\xe7\u0131k kaynak projesi pnpm kullanmaya ba\u015flad\u0131. Baz\u0131lar\u0131, monorepolar\'a olan deste\u011fi nedeniyle pnpm\'e ge\xe7ti:\\n\\n* [Vue](https://github.com/vuejs/vue-next)\\n* [Vite](https://github.com/vitejs/vite)\\n* ve [di\u011ferleri](https://pnpm.io/workspaces#usage-examples)\\n\\nBaz\u0131lar\u0131, pnpm\'in verimli, h\u0131zl\u0131 ve g\xfczel olu\u015funu sevdikleri i\xe7in ge\xe7ti:\\n\\n* [Autoprefixer](https://twitter.com/Autoprefixer/status/1476226146488692736)\\n* [PostCSS](https://twitter.com/PostCSS/status/1470438664006258701)\\n* [Browserslist](https://twitter.com/Browserslist/status/1468264308308156419)\\n\\n## \xd6ne \xe7\u0131kan \xf6zellikler:\\n\\n### Yeni `lockfile` format\u0131 ( [v6.0.0](https://github.com/pnpm/pnpm/releases/tag/v6.0.0)\'dan beri)\\n\\nBu y\u0131lki ilk ve en \xf6nemli de\u011fi\u015fikliklerden biri yeni `pnpm-lock.yaml` format\u0131yd\u0131. Bu son derece \xf6nemli bir de\u011fi\u015fiklikti, bu y\xfczden v6\'y\u0131 yay\u0131nlamak zorunda kald\u0131k. Buna ra\u011fmen ba\u015far\u0131l\u0131 oldu. Eski lockfile Git\'in s\u0131k s\u0131k \xe7ak\u0131\u015fmas\u0131na(conflicts) neden oluyordu. Yeni format kullan\u0131ma sunuldu\u011fundan beri Git \xe7ak\u0131\u015fmalar\u0131(conflicts) hakk\u0131nda herhangi bir \u015fikayet almad\u0131k.\\n\\n### Node.js s\xfcr\xfcmlerini y\xf6netme ( [v6.12.0](https://github.com/pnpm/pnpm/releases/tag/v6.12.0)\'dan beri)\\n\\nNode.js s\xfcr\xfcmlerini y\xf6netmeye izin veren yeni bir komut (`pnpm env`) yay\u0131nlad\u0131k. Yani nvm veya Volta gibi Node.js s\xfcr\xfcm y\xf6neticileri yerine pnpm kullanabilirsiniz.\\n\\nAyr\u0131ca, pnpm ba\u011f\u0131ms\u0131z \xe7al\u0131\u015ft\u0131r\u0131labilir bir dosya olarak g\xf6nderilir, b\xf6ylece sistemde \xf6nceden kurulu Node.js olmasa bile onu \xe7al\u0131\u015ft\u0131rabilirsiniz.\\n\\n### Yerel ba\u011f\u0131ml\u0131l\u0131klar\u0131 enjekte etme ( [v6.20.0](https://github.com/pnpm/pnpm/releases/tag/v6.20.0)\'dan beri)\\n\\nYerel bir ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 \\"enjekte edebilirsiniz\\". Varsay\u0131lan olarak, yerel ba\u011f\u0131ml\u0131l\u0131klar `node_modules` ile sembolik olarak ba\u011flant\u0131l\u0131d\u0131r, ancak bu yeni \xf6zellik ile pnpm\'e bunun yerine paketin dosyalar\u0131n\u0131 direk ba\u011flama (hard-link) talimat\u0131 verebilirsiniz.\\n\\n### E\u015f ba\u011f\u0131ml\u0131l\u0131k (peer-dependency) sorunlar\u0131n\u0131n iyile\u015ftirilmi\u015f raporlamas\u0131 ( [v6.24.0](https://github.com/pnpm/pnpm/releases/tag/v6.24.0)\'dan beri)\\n\\nE\u015f ba\u011f\u0131ml\u0131l\u0131k sorunlar\u0131 d\xfcz metin olarak yazd\u0131r\u0131l\u0131rd\u0131 ve bunlar\u0131 anlamak zordu. Art\u0131k hepsi grupland\u0131r\u0131lm\u0131\u015f ve d\xfczenli bir hiyerar\u015fi yap\u0131s\u0131nda yazd\u0131r\u0131lm\u0131\u015ft\u0131r.\\n\\n## Rekabet\\n\\n### Yarn\\n\\nYarn, [v3.1](https://dev.to/arcanis/yarn-31-corepack-esm-pnpm-optional-packages--3hak#new-install-mode-raw-pnpm-endraw-)\'e bir pnpm linker ekledi. B\xf6ylece Yarn, pnpm\'in olu\u015fturdu\u011funa benzer bir node-modules dizin yap\u0131s\u0131 olu\u015fturabilir.\\n\\nAyr\u0131ca Yarn ekibi, disk alan\u0131 a\xe7\u0131s\u0131ndan daha verimli olmak i\xe7in i\xe7erik adreslenebilir bir depolama uygulamay\u0131 planl\u0131yor.\\n\\n### npm\\n\\nnpm ekibi, pnpm\'nin kulland\u0131\u011f\u0131 sembolik ba\u011flant\u0131l\u0131 d\xfc\u011f\xfcm mod\xfclleri dizin yap\u0131s\u0131n\u0131 da benimsemeye karar verdi (ilgili [RFC](https://github.com/npm/rfcs/blob/main/accepted/0042-isolated-mode.md)).\\n\\n### Di\u011ferleri\\n\\nZig ile yaz\u0131lm\u0131\u015f [Bun](https://twitter.com/jarredsumner/status/1473416431291174912/photo/1) ve Rust ile yaz\u0131lm\u0131\u015f [Volt](https://github.com/voltpkg/volt)\'tan her ikisi de, npm/Yarn/pnpm\'den daha h\u0131zl\u0131 oldu\u011funu iddia ediyor. Bu yeni paket y\xf6neticilerini hen\xfcz kar\u015f\u0131la\u015ft\u0131rmad\u0131m.\\n\\n## Gelecek planlar\u0131\\n\\nDaha h\u0131zl\u0131, daha iyi, en iyisi."},{"id":"/2020/10/17/node-modules-configuration-options-with-pnpm","metadata":{"permalink":"/tr/blog/2020/10/17/node-modules-configuration-options-with-pnpm","editUrl":"https://crowdin.com/project/pnpm/tr","source":"@site/i18n/tr/docusaurus-plugin-content-blog/2020-10-17-node-modules-configuration-options-with-pnpm.md","title":"pnpm ile Node Modules yap\u0131land\u0131rma se\xe7enekleri","description":"nodemodules dizini olu\u015fturman\u0131n bir\xe7ok yolu vard\u0131r. Amac\u0131n\u0131z en kurall\u0131 olan\u0131 olu\u015fturmak olmal\u0131d\u0131r, ancak bu m\xfcmk\xfcn de\u011filse, serbest bir nodemodules yapmak i\xe7in se\xe7enekler de vard\u0131r.","date":"2020-10-17T00:00:00.000Z","formattedDate":"17 Ekim 2020","tags":[],"readingTime":1.39,"hasTruncateMarker":true,"authors":[{"name":"Zoltan Kochan","url":"http://twitter.com/zoltankochan","imageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"}],"frontMatter":{"title":"pnpm ile Node Modules yap\u0131land\u0131rma se\xe7enekleri","author":"Zoltan Kochan","authorURL":"http://twitter.com/zoltankochan","authorImageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"},"prevItem":{"title":"pnpm g\xf6z\xfcnden 2021 y\u0131l\u0131","permalink":"/tr/blog/2021/12/29/yearly-update"},"nextItem":{"title":"Klasik node_modules yap\u0131s\u0131 art\u0131k tek y\xf6ntem de\u011fil","permalink":"/tr/blog/2020/05/27/flat-node-modules-is-not-the-only-way"}},"content":"node_modules dizini olu\u015fturman\u0131n bir\xe7ok yolu vard\u0131r. Amac\u0131n\u0131z en kurall\u0131 olan\u0131 olu\u015fturmak olmal\u0131d\u0131r, ancak bu m\xfcmk\xfcn de\u011filse, serbest bir node_modules yapmak i\xe7in se\xe7enekler de vard\u0131r.\\n\\n\x3c!--truncate--\x3e\\n\\n## Varsay\u0131lan kurulum\\n\\nVarsay\u0131lan olarak pnpm v5, yar\u0131 kurall\u0131 bir node_modules olu\u015fturur. Yar\u0131 kurall\u0131 (birka\xe7 istisna d\u0131\u015f\u0131nda) ba\u011f\u0131ml\u0131l\u0131k olarak `package.json`\'a eklenen paketleri gerektirebilece\u011fi anlam\u0131na gelir. Buna ra\u011fmen, ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131z herhangi bir pakete eri\u015febilir olacakt\u0131r.\\n\\nVarsay\u0131lan yap\u0131land\u0131rma \u015f\xf6yle g\xf6r\xfcn\xfcr:\\n\\n```ini\\n; T\xfcm paketler, node_modules/.pnpm/node_modules\'a \xe7\u0131kar\u0131l\u0131r\\nhoist-pattern[]=*\\n\\n; TypeScript\'e uyumlanmak i\xe7in t\xfcm type\'lar root\'a \xe7\u0131kar\u0131l\u0131r\\npublic-hoist-pattern[]=*types*\\n\\n; ESLint ile ilgili t\xfcm paketler de root\'a \xe7\u0131kar\u0131l\u0131r\\npublic-hoist-pattern[]=*eslint*\\n```\\n\\n## Tak-\xc7al\u0131\u015ft\u0131r. En kat\u0131 yap\u0131land\u0131rma\\n\\npnpm, v5.9 \'dan bu yana [Yarn\'\u0131n Plug\'n\'Play](https://yarnpkg.com/features/pnp) \'ini destekler. PnP ile hem uygulaman\u0131z hem de uygulaman\u0131z\u0131n ba\u011f\u0131ml\u0131l\u0131klar\u0131 yaln\u0131zca belirtilen ba\u011f\u0131ml\u0131l\u0131klara eri\u015febilecektir. `hoist=false` ayar\u0131 ile bu i\u015flem daha da kat\u0131 olacakt\u0131r. Bir monorepo\'da uygulaman\u0131z \xfcst projenin ba\u011f\u0131ml\u0131l\u0131klar\u0131na da eri\u015femeyecektir.\\n\\nPlug\'n\'Play\'i kullanmak i\xe7in \u015fu ayarlar\u0131 yap\u0131n:\\n\\n```ini\\nnode-linker=pnp\\nsymlink=false\\n```\\n\\n## Kurall\u0131, geleneksel mod\xfcl dizini\\n\\nPnP\'yi kullanmaya hen\xfcz haz\u0131r de\u011filseniz bile, hala kurall\u0131 olabilir ve \xe7ekme (hoist) yap\u0131land\u0131rmas\u0131n\u0131 false olarak ayarlayarak paketlerin yaln\u0131zca kendi ba\u011f\u0131ml\u0131l\u0131klar\u0131na eri\u015fmesine izin verebilirsiniz:\\n\\n```ini\\nhoist=false\\n```\\n\\nAncak, ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131z\u0131n baz\u0131lar\u0131 ba\u011f\u0131ml\u0131l\u0131klar\u0131 olmayan paketlere eri\u015fmeye \xe7al\u0131\u015f\u0131yorsa, iki se\xe7ene\u011finiz vard\u0131r:\\n\\n1. Paketteki manifestoya eksik ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 eklemek i\xe7in `pnpmfile.js` olu\u015fturun ve [hook](/pnpmfile) kullan\u0131n.\\n\\n2. `hoist-pattern` ayar\u0131na bir kal\u0131p ekleyin. \xd6rne\u011fin, bulunamayan mod\xfcl `babel-core` ise, a\u015fa\u011f\u0131daki ayar\u0131 `.npmrc`\'ye ekleyin:\\n\\n    ```ini\\n    hoist-pattern[]=babel-core\\n    ```\\n\\n## En k\xf6t\xfc ihtimalle - root\'u yukar\u0131 \xe7ekme\\n\\nBaz\u0131 ara\xe7lar, her \u015feyi sanal kay\u0131t alan\u0131 (virtual store) \'n\u0131n root\'una ve baz\u0131s\u0131n\u0131 da direkt root\'a ta\u015f\u0131yan varsay\u0131lan pnpm yap\u0131land\u0131rmas\u0131yla bile \xe7al\u0131\u015fmayabilir. Bu durumda, her \u015feyi ya da bir ba\u011f\u0131ml\u0131l\u0131k alt k\xfcmesini, modules dizininin root\'una \xe7ekebilirsiniz.\\n\\nHoisting everything to the root of node_modules:\\n\\n```ini\\nshamefully-hoist=true\\n```\\n\\nYaln\u0131zca bir kal\u0131pla e\u015fle\u015fen paketleri yukar\u0131 \xe7ekin:\\n\\n```ini\\npublic-hoist-pattern[]=babel-*\\n```"},{"id":"/2020/05/27/flat-node-modules-is-not-the-only-way","metadata":{"permalink":"/tr/blog/2020/05/27/flat-node-modules-is-not-the-only-way","editUrl":"https://crowdin.com/project/pnpm/tr","source":"@site/i18n/tr/docusaurus-plugin-content-blog/2020-05-27-flat-node-modules-is-not-the-only-way.md","title":"Klasik node_modules yap\u0131s\u0131 art\u0131k tek y\xf6ntem de\u011fil","description":"Yeni pnpm kullan\u0131c\u0131lar\u0131 s\u0131k s\u0131k bana pnpm\'in yaratt\u0131\u011f\u0131 node_modules\'\xfcn garip yap\u0131s\u0131n\u0131 soruyor. Neden d\xfcz yap\u0131da de\u011fil? T\xfcm alt ba\u011f\u0131ml\u0131l\u0131klar nerede?","date":"2020-05-27T00:00:00.000Z","formattedDate":"27 May\u0131s 2020","tags":[],"readingTime":2.205,"hasTruncateMarker":true,"authors":[{"name":"Zoltan Kochan","url":"http://twitter.com/zoltankochan","imageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"}],"frontMatter":{"title":"Klasik node_modules yap\u0131s\u0131 art\u0131k tek y\xf6ntem de\u011fil","author":"Zoltan Kochan","authorURL":"http://twitter.com/zoltankochan","authorImageURL":"https://gravatar.com/avatar/1f59f040fb37d5799e3879fa678c2373?s=48"},"prevItem":{"title":"pnpm ile Node Modules yap\u0131land\u0131rma se\xe7enekleri","permalink":"/tr/blog/2020/10/17/node-modules-configuration-options-with-pnpm"}},"content":"Yeni pnpm kullan\u0131c\u0131lar\u0131 s\u0131k s\u0131k bana pnpm\'in yaratt\u0131\u011f\u0131 `node_modules`\'\xfcn garip yap\u0131s\u0131n\u0131 soruyor. Neden d\xfcz yap\u0131da de\u011fil? T\xfcm alt ba\u011f\u0131ml\u0131l\u0131klar nerede?\\n\\n\x3c!--truncate--\x3e\\n\\n> Makalenin okuyucular\u0131n\u0131n npm ve Yarn taraf\u0131ndan olu\u015fturulan `node_modules` yap\u0131s\u0131na zaten a\u015fina oldu\u011funu varsayaca\u011f\u0131m. Npm 3\'\xfcn neden v3\'te `node_modules`\'\xfcn d\xfcz yap\u0131s\u0131n\u0131 kullanmaya ba\u015flamas\u0131 gerekti\u011fini anlayamad\u0131ysan\u0131z, baz\u0131 eski kaynaklar\u0131 inceleyebilirsiniz: [Neden pnpm kullanmal\u0131y\u0131z?](https://www.kochan.io/nodejs/why-should-we-use-pnpm.html).\\n\\n\xd6yleyse neden pnpm\'in `node_modules`\'\xfc ola\u011fand\u0131\u015f\u0131? \u0130ki dizin olu\u015ftural\u0131m ve birinde `npm add express`, di\u011ferinde ise `pnpm add express` komutlar\u0131n\u0131 \xe7al\u0131\u015ft\u0131ral\u0131m. \u0130\u015fte ilk dizinin `node_modules`\'\xfcnden elde etti\u011finiz klas\xf6r yap\u0131s\u0131:\\n\\n```text\\n.bin\\naccepts\\narray-flatten\\nbody-parser\\nbytes\\ncontent-disposition\\ncookie-signature\\ncookie\\ndebug\\ndepd\\ndestroy\\nee-first\\nencodeurl\\nescape-html\\netag\\nexpress\\n```\\n\\nKlas\xf6r yap\u0131s\u0131n\u0131n tamam\u0131n\u0131 [burada](https://github.com/zkochan/comparing-node-modules/tree/master/npm-example/node_modules) g\xf6rebilirsiniz.\\n\\nVe bu ise, pnpm taraf\u0131ndan olu\u015fturulan `node_modules`:\\n\\n```text\\n.pnpm\\n.modules.yaml\\nexpress\\n```\\n\\n[Buradan](https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules) kontrol edebilirsiniz.\\n\\nPeki, t\xfcm bu ba\u011f\u0131ml\u0131l\u0131klar nerede? G\xf6r\xfcld\xfc\u011f\xfc \xfczere, `node_modules`\'te `.pnpm` ad\u0131nda yaln\u0131zca bir klas\xf6r ve `express` ad\u0131nda bir sembolik ba\u011flant\u0131 var. Eh, biz zaten sadece `express` y\xfckledik, bu y\xfczden uygulaman\u0131z\u0131n eri\u015fmesi gereken tek paket bu\\n\\n> pnpm\'in kat\u0131 kurall\u0131l\u0131\u011f\u0131n\u0131n neden iyi bir \u015fey oldu\u011fu hakk\u0131nda [ daha fazla bilgi ](https://medium.com/pnpm/pnpms-strictness-helps-to-avoid-silly-bugs-9a15fb306308) edinin\\n\\nBakal\u0131m, `express` i\xe7inde neler var:\\n\\n```text\\n\u25be node_modules\\n  \u25b8 .pnpm\\n  \u25be express\\n    \u25b8 lib\\n      History.md\\n      index.js\\n      LICENSE\\n      package.json\\n      Readme.md\\n  .modules.yaml\\n```\\n\\n`express`\'in `node_modules`\'\xfc yok mu? `express`\'in t\xfcm ba\u011f\u0131ml\u0131l\u0131klar\u0131 nerede?\\n\\n\u0130\u015fin p\xfcf noktas\u0131, `express`\'in sadece bir sembolik ba\u011flant\u0131 olmas\u0131d\u0131r. Node.js ba\u011f\u0131ml\u0131l\u0131klar\u0131 \xe7\xf6zd\xfc\u011f\xfcnde, onlar\u0131n ger\xe7ek konumlar\u0131n\u0131 kullan\u0131r, bu nedenle sembolik ba\u011flant\u0131lar\u0131 korumaz. Ancak, `express`\'in ger\xe7ek konumu nerede diye sorabilirsiniz?\\n\\n\u0130\u015fte burada: [node_modules/.pnpm/express@4.17.1/node_modules/express](https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules/.pnpm/express@4.17.1/node_modules/express).\\n\\nTamam, \u015fimdi `.pnpm/` klas\xf6r\xfcn\xfcn amac\u0131n\u0131 biliyoruz. `.pnpm/` t\xfcm paketleri d\xfcz bir klas\xf6r yap\u0131s\u0131nda saklar, b\xf6ylece her paket bu modelle adland\u0131r\u0131lan bir klas\xf6rde bulunabilir:\\n\\n```text\\n.pnpm/<paket-ad\u0131>@<versiyon>/node_modules/<paket-ad\u0131>\\n```\\n\\nBiz buna sanal saklama dizini diyoruz.\\n\\nBu d\xfcz yap\u0131, npm v2 taraf\u0131ndan olu\u015fturulan `node_modules`\'\xfcn neden oldu\u011fu i\xe7 i\xe7e dosya yolu sorunlar\u0131n\u0131 \xf6nler, ancak npm v3,4,5,6 veya Yarn v1 taraf\u0131ndan olu\u015fturulan d\xfcz `node_modules` yap\u0131s\u0131na gerek duymadan paketleri korur.\\n\\n\u015eimdi, `express` \'in ger\xe7ek konumuna bakal\u0131m:\\n\\n```text\\n  \u25be express\\n    \u25b8 lib\\n      History.md\\n      index.js\\n      LICENSE\\n      package.json\\n      Readme.md\\n```\\n\\nBu bir doland\u0131r\u0131c\u0131l\u0131k m\u0131? Hala `node_modules` yok! pnpm \' nin `node_modules` yap\u0131s\u0131n\u0131n ikinci hilesi, paketlerin ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131n, ba\u011f\u0131ml\u0131 paketin ger\xe7ek konumlar\u0131n\u0131n ayn\u0131 dizin d\xfczeyinde olmas\u0131d\u0131r. Dolay\u0131s\u0131yla `express`\'in ba\u011f\u0131ml\u0131l\u0131klar\u0131 `.pnpm/express@4.17.1/node_modules/express/node_modules/`\'\xfcn i\xe7erisinde de\u011fil, [.pnpm/express@4.17.1/node_modules/](https://github.com/zkochan/comparing-node-modules/tree/master/pnpm5-example/node_modules/.pnpm/express@4.17.1/node_modules) i\xe7erisindedir:\\n\\n```text\\n\u25be node_modules\\n  \u25be .pnpm\\n    \u25b8 accepts@1.3.5\\n    \u25b8 array-flatten@1.1.1\\n    ...\\n    \u25be express@4.16.3\\n      \u25be node_modules\\n        \u25b8 accepts\\n        \u25b8 array-flatten\\n        \u25b8 body-parser\\n        \u25b8 content-disposition\\n        ...\\n        \u25b8 etag\\n        \u25be express\\n          \u25b8 lib\\n            History.md\\n            index.js\\n            LICENSE\\n            package.json\\n            Readme.md\\n```\\n\\n`express`\'in t\xfcm ba\u011f\u0131ml\u0131l\u0131klar\u0131, `node_modules/.pnpm/` i\xe7indeki uygun dizinlere sembolik ba\u011flant\u0131lard\u0131r. `express`\'in ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 bir seviye yukar\u0131 yerle\u015ftirmek dairesel sembolik ba\u011flant\u0131lardan ka\xe7\u0131nmay\u0131 sa\u011flar.\\n\\nG\xf6rd\xfc\u011f\xfcn\xfcz gibi, pnpm\'in `node_modules` yap\u0131s\u0131 ilk bak\u0131\u015fta ola\u011fand\u0131\u015f\u0131 g\xf6r\xfcnse de:\\n\\n1. Tamam\u0131yla Node.js uyumlu\\n2. paketler ba\u011f\u0131ml\u0131l\u0131klar\u0131yla g\xfczel bir \u015fekilde grupland\u0131r\u0131lm\u0131\u015ft\u0131r\\n\\nE\u015f ba\u011f\u0131ml\u0131l\u0131klar\u0131 olan paketler i\xe7in yap\u0131 [biraz daha karma\u015f\u0131k](/how-peers-are-resolved), ancak fikir ayn\u0131d\u0131r: d\xfcz bir dizin yap\u0131s\u0131yla i\xe7 i\xe7e yerle\u015ftirme olu\u015fturmak i\xe7in sembolik ba\u011flant\u0131lar kullanmakt\u0131r."}]}')}}]);