"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4551],{9613:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>m});var t=r(9496);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function p(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?p(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},p=Object.keys(e);for(t=0;t<p.length;t++)r=p[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)r=p[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),c=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,p=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,y=u["".concat(i,".").concat(m)]||u[m]||s[m]||p;return r?t.createElement(y,a(a({ref:n},d),{},{components:r})):t.createElement(y,a({ref:n},d))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var p=r.length,a=new Array(p);a[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<p;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7495:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var t=r(2962),o=r(2742),p=(r(9496),r(9613)),a=["components"],l={id:"deploy",title:"pnpm deploy"},i=void 0,c={unversionedId:"cli/deploy",id:"cli/deploy",title:"pnpm deploy",description:"Agregado en: v7.4.0",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/cli/deploy.md",sourceDirName:"cli",slug:"/cli/deploy",permalink:"/es/next/cli/deploy",draft:!1,editUrl:"https://crowdin.com/project/pnpm/es-ES",tags:[],version:"current",frontMatter:{id:"deploy",title:"pnpm deploy"},sidebar:"docs",previous:{title:"pnpm init",permalink:"/es/next/cli/init"},next:{title:"pnpm doctor",permalink:"/es/next/cli/doctor"}},d={},s=[{value:"Archivos incluidos en el proyecto desplegado",id:"archivos-incluidos-en-el-proyecto-desplegado",level:2}],u={toc:s};function m(e){var n=e.components,r=(0,o.Z)(e,a);return(0,p.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Agregado en: v7.4.0"),(0,p.kt)("p",null,"Desplegar un paquete desde un ",(0,p.kt)("inlineCode",{parentName:"p"},"workspace"),"."),(0,p.kt)("p",null,"Uso:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"pnpm --filter=<nombre del proyecto a desplegar> deploy <directorio destino>\n")),(0,p.kt)("p",null,"En caso de que genere el proyecto antes de desplegarlo, utilice tambi\xe9n la opci\xf3n ",(0,p.kt)("inlineCode",{parentName:"p"},"--prod")," para omitir la instalaci\xf3n de ",(0,p.kt)("inlineCode",{parentName:"p"},"devDependencies"),"."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"pnpm --filter=<nombre del proyecto a desplegar> deploy <directorio destino>\n")),(0,p.kt)("p",null,"Uso en una imagen docker. Despu\xe9s de generar todo en su monorepo, haga esto en una segunda imagen que use su imagen base monorepo como contexto de construcci\xf3n o en una etapa de generaci\xf3n adicional:"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'# syntax=docker/dockerfile:1.4\n\nFROM workspace as pruned\nRUN pnpm --filter <nombre del proyecto a desplegar> --prod deploy pruned\n\nFROM node:18-alpine\nWORKDIR /app\n\nENV NODE_ENV=production\n\nCOPY --from=pruned /app/pruned .\n\nENTRYPOINT ["node", "index.js"]\n')),(0,p.kt)("h2",{id:"archivos-incluidos-en-el-proyecto-desplegado"},"Archivos incluidos en el proyecto desplegado"),(0,p.kt)("p",null,"De forma predeterminada, todos los archivos del proyecto se copian durante el depliege. El archivo ",(0,p.kt)("inlineCode",{parentName:"p"},"package.json"),' del proyecto puede contener un campo "files" para listar los archivos y directorios que deben copiarse.'))}m.isMDXComponent=!0}}]);