"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9613],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9186:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(2962),a=n(2742),o=(n(9496),n(9613)),i=["components"],l={id:"run",title:"pnpm run"},p=void 0,s={unversionedId:"cli/run",id:"version-6.x/cli/run",title:"pnpm run",description:"Aliases: run-script",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-6.x/cli/run.md",sourceDirName:"cli",slug:"/cli/run",permalink:"/pt/6.x/cli/run",draft:!1,editUrl:"https://crowdin.com/project/pnpm/pt-BR",tags:[],version:"6.x",frontMatter:{id:"run",title:"pnpm run"},sidebar:"version-6.x/docs",previous:{title:"pnpm why",permalink:"/pt/6.x/cli/why"},next:{title:"pnpm test",permalink:"/pt/6.x/cli/test"}},c={},u=[{value:"Exemplos",id:"exemplos",level:2},{value:"Detalhes",id:"detalhes",level:2},{value:"Diferen\xe7as com <code>npm run</code>",id:"diferen\xe7as-com-npm-run",level:2},{value:"Op\xe7\xf5es",id:"op\xe7\xf5es",level:2},{value:"script-shell",id:"script-shell",level:3},{value:"shell-emulator",id:"shell-emulator",level:3},{value:"--recursive, -r",id:"--recursive--r",level:3},{value:"--if-present",id:"--if-present",level:3},{value:"--parallel",id:"--parallel",level:3},{value:"--stream",id:"--stream",level:3},{value:"--aggregate-output",id:"--aggregate-output",level:3},{value:"enable-pre-post-scripts",id:"enable-pre-post-scripts",level:3},{value:"--filter &lt;package_selector&gt;",id:"--filter-package_selector",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Aliases: ",(0,o.kt)("inlineCode",{parentName:"p"},"run-script")),(0,o.kt)("p",null,"Executa um script definido no arquivo de manifesto do pacote."),(0,o.kt)("h2",{id:"exemplos"},"Exemplos"),(0,o.kt)("p",null,"Digamos que voc\xea tenha um script ",(0,o.kt)("inlineCode",{parentName:"p"},"watch")," configurado em seu ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),", da seguinte forma:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n    "watch": "build-command --watch"\n}\n')),(0,o.kt)("p",null,"Agora voc\xea pode executar esse script usando ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run watch"),"! Simples, certo? Outra coisa a notar para aqueles que gostam de economizar teclas e tempo \xe9 que todos os scripts possuem um alias de comando pnpm, por isso, no fim das contas, ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm watch")," \xe9 apenas uma abrevia\xe7\xe3o para ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run watch")," (SOMENTE para scripts que n\xe3o compartilham o mesmo nome de comandos existentes do pnpm)."),(0,o.kt)("h2",{id:"detalhes"},"Detalhes"),(0,o.kt)("p",null,"Al\xe9m do ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),"pr\xe9-existente do shell, ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run")," inclui ",(0,o.kt)("inlineCode",{parentName:"p"},"node_modules/.bin")," no ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH")," fornecido para os ",(0,o.kt)("inlineCode",{parentName:"p"},"scripts"),". Isso significa que, desde que voc\xea tenha um pacote instalado, voc\xea pode us\xe1-lo em um script como um comando comum. Por exemplo, se voc\xea tem o ",(0,o.kt)("inlineCode",{parentName:"p"},"eslint")," instalado, voc\xea pode escrever um script assim:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"lint": "eslint src --fix"\n')),(0,o.kt)("p",null,"E mesmo que ",(0,o.kt)("inlineCode",{parentName:"p"},"eslint")," n\xe3o esteja instalado globalmente em seu shell, ele ser\xe1 executado."),(0,o.kt)("p",null,"For workspaces, as of v3.5, ",(0,o.kt)("inlineCode",{parentName:"p"},"<workspace root>/node_modules/.bin")," is also added to the ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),", so if a tool is installed in the workspace root, it may be called in any workspace package's ",(0,o.kt)("inlineCode",{parentName:"p"},"scripts"),"."),(0,o.kt)("h2",{id:"diferen\xe7as-com-npm-run"},"Diferen\xe7as com ",(0,o.kt)("inlineCode",{parentName:"h2"},"npm run")),(0,o.kt)("p",null,"Por padr\xe3o, o pnpm n\xe3o executa hooks arbitr\xe1rios ",(0,o.kt)("inlineCode",{parentName:"p"},"pre")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"post")," para scripts definidos pelo usu\xe1rio (como ",(0,o.kt)("inlineCode",{parentName:"p"},"prestart"),"). Esse comportamento, herdado do npm, fazia com que os scripts fossem impl\xedcitos em vez de expl\xedcitos, ofuscando o fluxo de execu\xe7\xe3o. Tamb\xe9m levou a execu\xe7\xf5es surpreendentes com ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm serve")," tamb\xe9m executando ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm preserve"),"."),(0,o.kt)("p",null,"Se por algum motivo voc\xea precisar do comportamento pr\xe9/p\xf3s scripts do npm, use a op\xe7\xe3o ",(0,o.kt)("inlineCode",{parentName:"p"},"enable-pre-post-scripts"),"."),(0,o.kt)("h2",{id:"op\xe7\xf5es"},"Op\xe7\xf5es"),(0,o.kt)("h3",{id:"script-shell"},"script-shell"),(0,o.kt)("p",null,"Added in: v5.10.0"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Padr\xe3o: ",(0,o.kt)("strong",{parentName:"li"},"null")),(0,o.kt)("li",{parentName:"ul"},"Tipo: ",(0,o.kt)("strong",{parentName:"li"},"caminho"))),(0,o.kt)("p",null,"The shell to use for scripts run with the ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm run")," command."),(0,o.kt)("p",null,"For instance, to force usage of Git Bash on Windows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'pnpm config set script-shell "C:\\\\Program Files\\\\git\\\\bin\\\\bash.exe"\n')),(0,o.kt)("h3",{id:"shell-emulator"},"shell-emulator"),(0,o.kt)("p",null,"Added in: v5.8.0"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Padr\xe3o: ",(0,o.kt)("strong",{parentName:"li"},"low")),(0,o.kt)("li",{parentName:"ul"},"Tipo: ",(0,o.kt)("strong",{parentName:"li"},"Boolean"))),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", pnpm will use a JavaScript implementation of a ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@yarnpkg/shell"},"bash-like shell")," to execute scripts."),(0,o.kt)("p",null,"This option simplifies cross-platform scripting. For instance, by default, the next script will fail on non-POSIX-compliant systems:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "test": "NODE_ENV=test node test.js"\n}\n')),(0,o.kt)("p",null,"But if the ",(0,o.kt)("inlineCode",{parentName:"p"},"shell-emulator")," setting is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", it will work on all platforms."),(0,o.kt)("h3",{id:"--recursive--r"},"--recursive, -r"),(0,o.kt)("p",null,"This runs an arbitrary command from each package's \"scripts\" object. If a package doesn't have the command, it is skipped. If none of the packages have the command, the command fails."),(0,o.kt)("h3",{id:"--if-present"},"--if-present"),(0,o.kt)("p",null,"Added in: v4.5.0"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--if-present")," flag to avoid exiting with a non-zero exit code when the script is undefined. This lets you run potentially undefined scripts without breaking the execution chain."),(0,o.kt)("h3",{id:"--parallel"},"--parallel"),(0,o.kt)("p",null,"Added in: v5.1.0"),(0,o.kt)("p",null,"Completely disregard concurrency and topological sorting, running a given script immediately in all matching packages with prefixed streaming output. This is the preferred flag for long-running processes over many packages, for instance, a lengthy build process."),(0,o.kt)("h3",{id:"--stream"},"--stream"),(0,o.kt)("p",null,"Added in: v5.1.0"),(0,o.kt)("p",null,"Stream output from child processes immediately, prefixed with the originating package directory. This allows output from different packages to be interleaved."),(0,o.kt)("h3",{id:"--aggregate-output"},"--aggregate-output"),(0,o.kt)("p",null,"Added in: v6.24.0"),(0,o.kt)("p",null,"Aggregate output from child processes that are run in parallel, and only print output when the child process is finished. It makes reading large logs after running ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm -r <command>")," with ",(0,o.kt)("inlineCode",{parentName:"p"},"--parallel")," or with ",(0,o.kt)("inlineCode",{parentName:"p"},"--workspace-concurrency=<number>")," much easier (especially on CI). Only ",(0,o.kt)("inlineCode",{parentName:"p"},"--reporter=append-only")," is supported."),(0,o.kt)("h3",{id:"enable-pre-post-scripts"},"enable-pre-post-scripts"),(0,o.kt)("p",null,"Added in: v6.1.0"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Padr\xe3o: ",(0,o.kt)("strong",{parentName:"li"},"low")),(0,o.kt)("li",{parentName:"ul"},"Tipo: ",(0,o.kt)("strong",{parentName:"li"},"Boolean"))),(0,o.kt)("p",null,"When ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", pnpm will run any pre/post scripts automatically. So running ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm foo")," will be like running ",(0,o.kt)("inlineCode",{parentName:"p"},"pnpm prefoo && pnpm foo && pnpm postfoo"),"."),(0,o.kt)("h3",{id:"--filter-package_selector"},"--filter ","<","package_selector",">"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/pt/6.x/filtering"},"Leia mais sobre filtragem.")))}d.isMDXComponent=!0}}]);